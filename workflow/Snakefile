from snakemake.utils import R, listfiles
import pandas as pd
import os


if os.path.isfile("config/configfile.yaml"):
    configfile: "config/configfile.yaml"

samples = (
    pd.read_csv(config["samples"], sep="\t", dtype={"sample": str})
    .set_index("sample", drop=False)
    .sort_index()

)
# # Dynamically load all modules/rules
# smks = list(listfiles('rules/core/{section}/{part}.smk'))
#
# for smk,rule in smks:
#     include: smk

include: "rules/preprocessing.smk"
include: "rules/coassembly.smk"
# include: "rules/core/preprocessing/common.smk"
# # Load extensions
# for ext, rule in list(listfiles('workflow/rules/extensions/{section}/{part}.smk')):
#     section, name = rule
#     if section in ["antismash"]:
#         include: ext
include: "rules/single_sample_assembly.smk"


# # Load report
#for rpt, rule in list(listfiles('workflow/rules/report/{part}.smk')):
#    name = rule
#    include: rpt
#

# Dynamically add all output files
# outfiles = []
# for name,rule in rules.__dict__.items():
#     for file in rule.output:
#         outfiles.append(file)

rule all:
    input:
        "results/02_filtered_reads/B57_normalized_1.fq.gz",
        "results/02_filtered_reads/B57_normalized_2.fq.gz",
        "results/03_assembly/single_sample_assembly/B57/quast_results/report.html",
        "results/03_assembly/coassembly/megahit_assembly/assembly_A/A_final.contigs.fa",
        "results/03_assembly/coassembly/megahit_assembly/assembly_B/B_final.contigs.fa"



    # input: expand(output,
    #               sample=config["data"],
    #               treatment=config["treatment"],
    #               assembler=config["assembler"],
    #               binner=config["binner"],
    #               kmers=config["assembly-klist"]
    #              )

